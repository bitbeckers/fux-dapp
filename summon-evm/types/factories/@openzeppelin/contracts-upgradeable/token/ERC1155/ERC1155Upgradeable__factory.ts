/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155Upgradeable,
  ERC1155UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable";
import type { PromiseOrValue } from "../../../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610db3565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610df6565b610237565b60405190151581526020016100a9565b6100e86100e3366004610e1a565b610289565b6040516100a99190610e80565b610108610103366004610fdf565b61031d565b005b61011d610118366004611089565b6103b0565b6040516100a9919061118f565b6101086101383660046111a2565b6104ee565b6100c561014b3660046111de565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b610108610187366004611211565b6104fd565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061026857506001600160e01b031982166303a24d0760e21b145b8061028357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606067805461029890611276565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611276565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103395750610339853361014b565b61039c5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b6064820152608401610206565b6103a98585858585610589565b5050505050565b606081518351146104295760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff81111561044557610445610e93565b60405190808252806020026020018201604052801561046e578160200160208202803683370190505b50905060005b84518110156104e6576104b9858281518110610492576104926112b0565b60200260200101518583815181106104ac576104ac6112b0565b602002602001015161018c565b8282815181106104cb576104cb6112b0565b60209081029190910101526104df816112dc565b9050610474565b509392505050565b6104f93383836107ff565b5050565b6001600160a01b0385163314806105195750610519853361014b565b61057c5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b6064820152608401610206565b6103a985858585856108f3565b81518351146106005760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b0384166106645760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3360005b8451811015610791576000858281518110610685576106856112b0565b6020026020010151905060008583815181106106a3576106a36112b0565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156107375760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906107769084906112f5565b925050819055505050508061078a906112dc565b9050610668565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107e192919061130d565b60405180910390a46107f7818787878787610aa2565b505050505050565b816001600160a01b0316836001600160a01b0316036108865760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109575760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b33600061096385610c50565b9050600061097085610c50565b905060008681526065602090815260408083206001600160a01b038c168452909152902054858110156109f85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610a379084906112f5565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a97848a8a8a8a8a610c9b565b505050505050505050565b6001600160a01b0384163b156107f75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ae6908990899088908890889060040161133b565b6020604051808303816000875af1925050508015610b21575060408051601f3d908101601f19168201909252610b1e91810190611399565b60015b610bd657610b2d6113b6565b806308c379a003610b665750610b416113d2565b80610b4c5750610b68565b8060405162461bcd60e51b81526004016102069190610e80565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b6001600160e01b0319811663bc197c8160e01b14610c475760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c8a57610c8a6112b0565b602090810291909101015292915050565b6001600160a01b0384163b156107f75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610cdf908990899088908890889060040161145c565b6020604051808303816000875af1925050508015610d1a575060408051601f3d908101601f19168201909252610d1791810190611399565b60015b610d2657610b2d6113b6565b6001600160e01b0319811663f23a6e6160e01b14610c475760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b80356001600160a01b0381168114610dae57600080fd5b919050565b60008060408385031215610dc657600080fd5b610dcf83610d97565b946020939093013593505050565b6001600160e01b031981168114610df357600080fd5b50565b600060208284031215610e0857600080fd5b8135610e1381610ddd565b9392505050565b600060208284031215610e2c57600080fd5b5035919050565b6000815180845260005b81811015610e5957602081850181015186830182015201610e3d565b81811115610e6b576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610e136020830184610e33565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610ecf57610ecf610e93565b6040525050565b600067ffffffffffffffff821115610ef057610ef0610e93565b5060051b60200190565b600082601f830112610f0b57600080fd5b81356020610f1882610ed6565b604051610f258282610ea9565b83815260059390931b8501820192828101915086841115610f4557600080fd5b8286015b84811015610f605780358352918301918301610f49565b509695505050505050565b600082601f830112610f7c57600080fd5b813567ffffffffffffffff811115610f9657610f96610e93565b604051610fad601f8301601f191660200182610ea9565b818152846020838601011115610fc257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610ff757600080fd5b61100086610d97565b945061100e60208701610d97565b9350604086013567ffffffffffffffff8082111561102b57600080fd5b61103789838a01610efa565b9450606088013591508082111561104d57600080fd5b61105989838a01610efa565b9350608088013591508082111561106f57600080fd5b5061107c88828901610f6b565b9150509295509295909350565b6000806040838503121561109c57600080fd5b823567ffffffffffffffff808211156110b457600080fd5b818501915085601f8301126110c857600080fd5b813560206110d582610ed6565b6040516110e28282610ea9565b83815260059390931b850182019282810191508984111561110257600080fd5b948201945b838610156111275761111886610d97565b82529482019490820190611107565b9650508601359250508082111561113d57600080fd5b5061114a85828601610efa565b9150509250929050565b600081518084526020808501945080840160005b8381101561118457815187529582019590820190600101611168565b509495945050505050565b602081526000610e136020830184611154565b600080604083850312156111b557600080fd5b6111be83610d97565b9150602083013580151581146111d357600080fd5b809150509250929050565b600080604083850312156111f157600080fd5b6111fa83610d97565b915061120860208401610d97565b90509250929050565b600080600080600060a0868803121561122957600080fd5b61123286610d97565b945061124060208701610d97565b93506040860135925060608601359150608086013567ffffffffffffffff81111561126a57600080fd5b61107c88828901610f6b565b600181811c9082168061128a57607f821691505b6020821081036112aa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112ee576112ee6112c6565b5060010190565b60008219821115611308576113086112c6565b500190565b6040815260006113206040830185611154565b82810360208401526113328185611154565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261136760a0830186611154565b82810360608401526113798186611154565b9050828103608084015261138d8185610e33565b98975050505050505050565b6000602082840312156113ab57600080fd5b8151610e1381610ddd565b600060033d11156113cf5760046000803e5060005160e01c5b90565b600060443d10156113e05790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561141057505050505090565b82850191508151818111156114285750505050505090565b843d87010160208285010111156114425750505050505090565b61145160208286010187610ea9565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261149460a0830184610e33565b97965050505050505056fea164736f6c634300080d000a";

type ERC1155UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC1155UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC1155Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Upgradeable {
    return super.attach(address) as ERC1155Upgradeable;
  }
  override connect(signer: Signer): ERC1155Upgradeable__factory {
    return super.connect(signer) as ERC1155Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155UpgradeableInterface {
    return new utils.Interface(_abi) as ERC1155UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Upgradeable;
  }
}

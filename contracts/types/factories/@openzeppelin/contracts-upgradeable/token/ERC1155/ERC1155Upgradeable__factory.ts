/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155Upgradeable,
  ERC1155UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable";
import type { PromiseOrValue } from "../../../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506116e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610f96565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610ff1565b610237565b60405190151581526020016100a9565b6100e86100e3366004611015565b61031c565b6040516100a9919061107b565b6101086101033660046111da565b6103b0565b005b61011d610118366004611284565b610452565b6040516100a9919061138a565b61010861013836600461139d565b610590565b6100c561014b3660046113d9565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b61010861018736600461140c565b61059f565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806102ca57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061031657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606067805461032b90611471565b80601f016020809104026020016040519081016040528092919081815260200182805461035790611471565b80156103a45780601f10610379576101008083540402835291602001916103a4565b820191906000526020600020905b81548152906001019060200180831161038757829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103cc57506103cc853361014b565b61043e5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610206565b61044b858585858561063a565b5050505050565b606081518351146104cb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff8111156104e7576104e761108e565b604051908082528060200260200182016040528015610510578160200160208202803683370190505b50905060005b84518110156105885761055b858281518110610534576105346114ab565b602002602001015185838151811061054e5761054e6114ab565b602002602001015161018c565b82828151811061056d5761056d6114ab565b6020908102919091010152610581816114d7565b9050610516565b509392505050565b61059b3383836108db565b5050565b6001600160a01b0385163314806105bb57506105bb853361014b565b61062d5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610206565b61044b85858585856109ed565b81518351146106b15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b03841661072d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610206565b3360005b845181101561086d57600085828151811061074e5761074e6114ab565b60200260200101519050600085838151811061076c5761076c6114ab565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156108135760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610206565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061085290849061150f565b9250508190555050505080610866906114d7565b9050610731565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108bd929190611527565b60405180910390a46108d3818787878787610bc7565b505050505050565b816001600160a01b0316836001600160a01b0316036109625760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610a695760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610206565b336000610a7585610dd4565b90506000610a8285610dd4565b905060008681526065602090815260408083206001600160a01b038c16845290915290205485811015610b1d5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610206565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610b5c90849061150f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610bbc848a8a8a8a8a610e1f565b505050505050505050565b6001600160a01b0384163b156108d3576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190610c249089908990889088908890600401611555565b6020604051808303816000875af1925050508015610c5f575060408051601f3d908101601f19168201909252610c5c918101906115b3565b60015b610d1457610c6b6115d0565b806308c379a003610ca45750610c7f6115ec565b80610c8a5750610ca6565b8060405162461bcd60e51b8152600401610206919061107b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014610dcb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610206565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610e0e57610e0e6114ab565b602090810291909101015292915050565b6001600160a01b0384163b156108d3576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e6190610e7c9089908990889088908890600401611694565b6020604051808303816000875af1925050508015610eb7575060408051601f3d908101601f19168201909252610eb4918101906115b3565b60015b610ec357610c6b6115d0565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014610dcb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610206565b80356001600160a01b0381168114610f9157600080fd5b919050565b60008060408385031215610fa957600080fd5b610fb283610f7a565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610fee57600080fd5b50565b60006020828403121561100357600080fd5b813561100e81610fc0565b9392505050565b60006020828403121561102757600080fd5b5035919050565b6000815180845260005b8181101561105457602081850181015186830182015201611038565b81811115611066576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061100e602083018461102e565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156110ca576110ca61108e565b6040525050565b600067ffffffffffffffff8211156110eb576110eb61108e565b5060051b60200190565b600082601f83011261110657600080fd5b81356020611113826110d1565b60405161112082826110a4565b83815260059390931b850182019282810191508684111561114057600080fd5b8286015b8481101561115b5780358352918301918301611144565b509695505050505050565b600082601f83011261117757600080fd5b813567ffffffffffffffff8111156111915761119161108e565b6040516111a86020601f19601f85011601826110a4565b8181528460208386010111156111bd57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156111f257600080fd5b6111fb86610f7a565b945061120960208701610f7a565b9350604086013567ffffffffffffffff8082111561122657600080fd5b61123289838a016110f5565b9450606088013591508082111561124857600080fd5b61125489838a016110f5565b9350608088013591508082111561126a57600080fd5b5061127788828901611166565b9150509295509295909350565b6000806040838503121561129757600080fd5b823567ffffffffffffffff808211156112af57600080fd5b818501915085601f8301126112c357600080fd5b813560206112d0826110d1565b6040516112dd82826110a4565b83815260059390931b85018201928281019150898411156112fd57600080fd5b948201945b838610156113225761131386610f7a565b82529482019490820190611302565b9650508601359250508082111561133857600080fd5b50611345858286016110f5565b9150509250929050565b600081518084526020808501945080840160005b8381101561137f57815187529582019590820190600101611363565b509495945050505050565b60208152600061100e602083018461134f565b600080604083850312156113b057600080fd5b6113b983610f7a565b9150602083013580151581146113ce57600080fd5b809150509250929050565b600080604083850312156113ec57600080fd5b6113f583610f7a565b915061140360208401610f7a565b90509250929050565b600080600080600060a0868803121561142457600080fd5b61142d86610f7a565b945061143b60208701610f7a565b93506040860135925060608601359150608086013567ffffffffffffffff81111561146557600080fd5b61127788828901611166565b600181811c9082168061148557607f821691505b6020821081036114a557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611508576115086114c1565b5060010190565b60008219821115611522576115226114c1565b500190565b60408152600061153a604083018561134f565b828103602084015261154c818561134f565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261158160a083018661134f565b8281036060840152611593818661134f565b905082810360808401526115a7818561102e565b98975050505050505050565b6000602082840312156115c557600080fd5b815161100e81610fc0565b600060033d11156115e95760046000803e5060005160e01c5b90565b600060443d10156115fa5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561164857505050505090565b82850191508151818111156116605750505050505090565b843d870101602082850101111561167a5750505050505090565b611689602082860101876110a4565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526116cc60a083018461102e565b97965050505050505056fea164736f6c634300080d000a";

type ERC1155UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC1155UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC1155Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Upgradeable {
    return super.attach(address) as ERC1155Upgradeable;
  }
  override connect(signer: Signer): ERC1155Upgradeable__factory {
    return super.connect(signer) as ERC1155Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155UpgradeableInterface {
    return new utils.Interface(_abi) as ERC1155UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Upgradeable;
  }
}
